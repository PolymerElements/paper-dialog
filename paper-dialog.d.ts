/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   paper-dialog.html
 */

/// <reference path="../polymer/types/polymer.d.ts" />
/// <reference path="../paper-dialog-behavior/paper-dialog-behavior.d.ts" />
/// <reference path="../paper-dialog-behavior/paper-dialog-shared-styles.d.ts" />

/**
 * Material design: [Dialogs](https://www.google.com/design/spec/components/dialogs.html)
 *
 * `<paper-dialog>` is a dialog with Material Design styling and optional animations when it is
 * opened or closed. It provides styles for a header, content area, and an action area for buttons.
 * You can use the `<paper-dialog-scrollable>` element (in its own repository) if you need a scrolling
 * content area. To autofocus a specific child element after opening the dialog, give it the `autofocus`
 * attribute. See `Polymer.PaperDialogBehavior` and `Polymer.IronOverlayBehavior` for specifics.
 *
 * For example, the following code implements a dialog with a header, scrolling content area and
 * buttons. Focus will be given to the `dialog-confirm` button when the dialog is opened.
 *
 *     <paper-dialog>
 *       <h2>Header</h2>
 *       <paper-dialog-scrollable>
 *         Lorem ipsum...
 *       </paper-dialog-scrollable>
 *       <div class="buttons">
 *         <paper-button dialog-dismiss>Cancel</paper-button>
 *         <paper-button dialog-confirm autofocus>Accept</paper-button>
 *       </div>
 *     </paper-dialog>
 *
 * ### Changes in 2.0
 * - `paper-dialog-behavior 2.0` styles only direct `h2` and `.buttons` children of the dialog because of how [`::slotted` works](https://developers.google.com/web/fundamentals/primers/shadowdom/?hl=en#stylinglightdom)
 * (compound selector will select only top level nodes)
 * - `<paper-dialog>` uses CSS animation keyframes instead of `neon-animation`, ([see Animations section](#Animations))
 *
 * ### Styling
 *
 * See the docs for `Polymer.PaperDialogBehavior` for the custom properties available for styling
 * this element.
 *
 * ### Animations
 *
 * Set the `entry-animation` and/or `exit-animation` attributes to add an animation when the dialog
 * is opened or closed. Included in the component are:
 * - fade-in-animation
 * - fade-out-animation
 * - scale-up-animation
 * - scale-down-animation
 *
 * These animations are not based on the deprecated `neon-animation` component, and use CSS keyframe animations.
 * This change reduces code size, and uses the platform. You can implement custom entry/exit animations using
 * CSS keyframe animations; define the animation keyframes, a CSS class for the animation, and assign the class to the `entry/exit-animation`, e.g.
 *
 *     <style>
 *       \@keyframes appear-from-top {
 *         0% {
 *           transform: translateY(-2000px);
 *           opacity: 0;
 *         }
 *         10% {
 *           opacity: 0.2;
 *         }
 *       }
 *
 *       .appear-from-top {
 *         animation-name: appear-from-top;
 *         animation-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);
 *         animation-duration: 500ms;
 *       }
 *     </style>
 *
 *     <paper-dialog entry-animation="appear-from-top"
 *                   exit-animation="fade-out-animation">
 *       <h2>Header</h2>
 *       <div>Dialog body</div>
 *     </paper-dialog>
 *
 * ### Accessibility
 *
 * See the docs for `Polymer.PaperDialogBehavior` for accessibility features implemented by this
 * element.
 */
interface PaperDialogElement extends Polymer.Element, Polymer.PaperDialogBehavior {

  /**
   * Deprecated, use `entryAnimation` and `exitAnimation` instead.
   * `paper-dialog` doesn't depend anymore on `neon-animation`, and this property is kept
   * here to not break bindings. Setting it won't have effects on the animation.
   */
  animationConfig: object|null|undefined;

  /**
   * The class defining the entry animation. `<paper-dialog>` ships
   * `fade-in-animation, fade-out-animation, scale-up-animation, scale-down-animation`,
   * but you can use custom animations too. See the Animations section in the README.md.
   */
  entryAnimation: string|null|undefined;

  /**
   * The class defining the exit animation. `<paper-dialog>` ships
   * `fade-in-animation, fade-out-animation, scale-up-animation, scale-down-animation`,
   * but you can use custom animations too. See the Animations section in the README.md.
   */
  exitAnimation: string|null|undefined;
  ready(): void;

  /**
   * `paper-dialog` doesn't depend anymore on `neon-animation`.
   * This method was previously inherited from `Polymer.NeonAnimatableBehavior`,
   * now is a no-op.
   */
  cancelAnimation(): void;

  /**
   * `paper-dialog` doesn't depend anymore on `neon-animation`.
   * This method was previously inherited from `Polymer.NeonAnimatableBehavior`,
   * now is a no-op.
   */
  playAnimation(type?: string, cookie?: object): void;

  /**
   * `paper-dialog` doesn't depend anymore on `neon-animation`.
   * This method was previously inherited from `Polymer.NeonAnimatableBehavior`,
   * now is a no-op.
   */
  getAnimationConfig(type: any): any;
}

interface HTMLElementTagNameMap {
  "paper-dialog": PaperDialogElement;
}
